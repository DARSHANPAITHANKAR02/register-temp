{"version":3,"sources":["fire.js","Login.js","Hero.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","e","target","onClick","Hero","handleLogout","App","useState","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","fire","auth","onAuthStateChanged","useEffect","signOut","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ab5bb04.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n\r\n\r\n  \r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyCjhIveFzYBF9u_tkJfiUOEaCCVw9BOzCg\",\r\n    authDomain: \"register-temp.firebaseapp.com\",\r\n    projectId: \"register-temp\",\r\n    storageBucket: \"register-temp.appspot.com\",\r\n    messagingSenderId: \"1016478177259\",\r\n    appId: \"1:1016478177259:web:d749f7dbbbf7f7335a2bae\"\r\n  };\r\n \r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React from 'react';\r\n\r\nconst Login=(props)=>{\r\n\r\n    const {email,setEmail,password,setPassword,handleLogin,handleSignup,hasAccount,setHasAccount,emailError,passwordError}=props;\r\n    return(\r\n        <section className=\"login\">\r\n            <div className=\"loginContainer\">\r\n                <label>Username</label>\r\n                <input \r\n                    type=\"text\" \r\n                    autoFocus \r\n                    required \r\n                    value={email} \r\n                    onChange={(e)=> setEmail(e.target.value)}\r\n                />\r\n                <p className=\"errorMsg\">{emailError}</p>\r\n                <label>Password</label>\r\n                <input \r\n                    type=\"password\" \r\n                    required \r\n                    value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n                />\r\n                <p className=\"errorMsg\">{passwordError}</p>\r\n                <div className=\"btnContainer\">\r\n                    {hasAccount ? (\r\n                        <>\r\n                        <button onClick={handleLogin}>\r\n                            Sign In\r\n                        </button>\r\n                        <p>Don't have an account? <span onClick={()=>setHasAccount(!hasAccount)}> Sign Up</span></p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                        <button onClick={handleSignup}>\r\n                            Sign Up\r\n                        </button>\r\n                        <p>Have an account? <span onClick={()=>setHasAccount(!hasAccount)}>Sign In</span></p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>1\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Hero=({handleLogout})=>{\r\n    return(\r\n        <section className=\"hero\">\r\n            <nav>\r\n                <h2>Welcome</h2>\r\n                <button onClick={handleLogout}>Logout</button>\r\n            </nav>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Hero;","import React,{useState, useEffect} from 'react';\nimport fire from './fire';\nimport Login from './Login';\nimport Hero from './Hero'\nimport \"./App.css\";\n\nconst App=()=>{\n\n  const [user,setUser]= useState('');\n  const [email,setEmail]=useState('');\n  const [password,setPassword]=useState('');\n  const [emailError, setEmailError]=useState('');\n  const [passwordError,setPasswordError]=useState('');\n  const [hasAccount,setHasAccount]=useState(false);\n  \n\n  const clearInputs=()=>{\n    setEmail('');\n    setPassword('');\n  }\n\n  const clearErrors=()=>{\n    setEmailError('');\n    setPasswordError('');\n  }\n  const handleLogin=()=>{\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email,password)\n      .catch(err=>{\n        switch(err.code){\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleSignup=()=>{\n    clearErrors();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email,password)\n      .catch(err=>{\n        switch(err.code){\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleLogout=()=>{\n    fire.auth().signOut();\n  };\n\n  const authListener=()=>{\n    fire.auth().onAuthStateChanged(user=>{\n      if(user){\n        clearInputs();\n        setUser(user);\n      }\n      else{\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(()=>{\n    authListener();\n  },[]);\n  return(\n    <div className=\"App\">\n      {user? (\n        <Hero handleLogout={handleLogout} />\n      ):(\n        <Login \n        email={email} \n        setEmail={setEmail} \n        password={password} \n        setPassword={setPassword}\n        handleLogin={handleLogin}\n        handleSignup={handleSignup}\n        hasAccount={hasAccount}\n        setHasAccount={setHasAccount}\n        emailError={emailError}\n        passwordError={passwordError}\n        />\n      )}\n      \n\n        \n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}